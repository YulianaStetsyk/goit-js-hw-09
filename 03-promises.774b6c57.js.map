{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,QAChCC,EAAUF,SAASG,iBAAiB,SACpCC,EAAUF,EAAQ,GAClBG,EAASH,EAAQ,GACjBI,EAAWJ,EAAQ,GAEzBH,EAAOQ,iBAAiB,UAExB,SAAuBC,G,kBAQnB,IAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,sBAAyCG,OAAnBC,EAAWC,EAAE,QAAYF,OAANG,EAAM,OAEvDL,EAAO,qBAAwCE,OAAnBC,EAAWC,EAAE,QAAYF,OAANG,EAAM,OAEvDA,GAASC,C,GACRD,EAAQC,EAAOF,E,IAIjBG,MAAK,SAAAC,GACJC,EAAA1B,GAAS2B,OAAOC,QAAQH,E,IAEzBI,OAAM,SAAAC,GACLJ,EAAA1B,GAAS2B,OAAOI,QAAQD,E,KAzB1BV,EAAW,EACXE,EAAQU,OAAOzB,EAAQkB,OACrBQ,EAASD,OAAOvB,EAASgB,OACzBF,EAAOS,OAAOxB,EAAOiB,OAE3Bd,EAAMuB,iBACN,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQE,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('form');\nconst inputEl = document.querySelectorAll('input');\nconst delayEl = inputEl[0];\nconst stepEl = inputEl[1];\nconst amountEl = inputEl[2];\n\nformEl.addEventListener('submit', createPromise);\n\nfunction createPromise(event) {\n  let position = 1;\n  let delay = Number(delayEl.value);\n  const amount = Number(amountEl.value);\n  const step = Number(stepEl.value);\n\n  event.preventDefault();\n  for (let i = 0; i < amount; i++) {\n    const shouldResolve = Math.random() > 0.3;\n\n    const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(` Fulfilled promise ${position + i} in ${delay}ms`);\n        } else {\n          reject(` Rejected promise ${position + i} in ${delay}ms`);\n        }\n        delay += step;\n      }, delay + step * i);\n    });\n\n    promise\n      .then(value => {\n        Notiflix.Notify.success(value);\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(error);\n      });\n  }\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$inputEl","querySelectorAll","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","addEventListener","event","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","position","i","delay","step","then","value","$parcel$interopDefault","Notify","success","catch","error","failure","Number","amount","preventDefault","i1","_loop"],"version":3,"file":"03-promises.774b6c57.js.map"}