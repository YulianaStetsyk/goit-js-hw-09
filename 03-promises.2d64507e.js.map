{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,QAChCC,EAAUF,SAASG,iBAAiB,SACpCC,EAAUF,EAAQ,GAClBG,EAASH,EAAQ,GACjBI,EAAWJ,EAAQ,GAEzBH,EAAOQ,iBAAiB,UAExB,SAAuBC,GACrB,IACIC,EAAQC,OAAON,EAAQO,OAC3B,MAAMC,EAASF,OAAOJ,EAASK,OACzBE,EAAOH,OAAOL,EAAOM,OAE3BH,EAAMM,iBACN,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAQG,IAAK,CAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,sBAZD,EAYkCL,QAAQN,OAEjDY,EAAO,qBAdA,EAcgCN,QAAQN,OAEjDA,GAASI,CAAI,GACZJ,EAAQI,EAAOE,EAAE,IAInBQ,MAAKZ,IACJa,EAAA3B,GAAS4B,OAAOC,QAAQf,EAAM,IAE/BgB,OAAMC,IACLJ,EAAA3B,GAAS4B,OAAOI,QAAQD,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('form');\nconst inputEl = document.querySelectorAll('input');\nconst delayEl = inputEl[0];\nconst stepEl = inputEl[1];\nconst amountEl = inputEl[2];\n\nformEl.addEventListener('submit', createPromise);\n\nfunction createPromise(event) {\n  let position = 1;\n  let delay = Number(delayEl.value);\n  const amount = Number(amountEl.value);\n  const step = Number(stepEl.value);\n\n  event.preventDefault();\n  for (let i = 0; i < amount; i++) {\n    const shouldResolve = Math.random() > 0.3;\n\n    const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(` Fulfilled promise ${position + i} in ${delay}ms`);\n        } else {\n          reject(` Rejected promise ${position + i} in ${delay}ms`);\n        }\n        delay += step;\n      }, delay + step * i);\n    });\n\n    promise\n      .then(value => {\n        Notiflix.Notify.success(value);\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(error);\n      });\n  }\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$inputEl","querySelectorAll","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","addEventListener","event","delay","Number","value","amount","step","preventDefault","i","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.2d64507e.js.map"}